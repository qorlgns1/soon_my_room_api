spring.application.name=soon-my-room

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION}
# Access Token (15분)
app.jwt.access-token.expiration=900000
# Refresh Token (7일)
app.jwt.refresh-token.expiration=604800000

# PostgreSQL Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Server Configuration
server.port=9000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# AWS S3 Configuration
aws.s3.region=${AWS_S3_REGION}
aws.s3.access-key=${AWS_S3_ACCESS_KEY}
aws.s3.secret-key=${AWS_S3_SECRET_KEY}

# S3 Bucket Configuration
aws.s3.bucket.profiles=${AWS_S3_BUCKET_PROFILES:user-profiles}
aws.s3.bucket.posts=${AWS_S3_BUCKET_POSTS:post-images}
aws.s3.bucket.products=${AWS_S3_BUCKET_PRODUCTS:product-images}
aws.s3.bucket.default=${AWS_S3_BUCKET_DEFAULT:default}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3005}

# Sentry Configuration
sentry.dsn=${SENTRY_DSN}
sentry.send-default-pii=true
sentry.traces-sample-rate=1.0